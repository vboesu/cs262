# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
import warnings

import src.common.protocol_pb2 as protocol__pb2

GRPC_GENERATED_VERSION = "1.70.0"
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(
        GRPC_VERSION, GRPC_GENERATED_VERSION
    )
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f"The grpc package installed is at version {GRPC_VERSION},"
        + f" but the generated code in protocol_pb2_grpc.py depends on"
        + f" grpcio>={GRPC_GENERATED_VERSION}."
        + f" Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}"
        + f" or downgrade your generated code using grpcio-tools<={GRPC_VERSION}."
    )


class BVChatStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListAccounts = channel.unary_unary(
            "/BVChat/ListAccounts",
            request_serializer=protocol__pb2.ListAccountsRequest.SerializeToString,
            response_deserializer=protocol__pb2.AccountResponse.FromString,
            _registered_method=True,
        )
        self.Login = channel.unary_unary(
            "/BVChat/Login",
            request_serializer=protocol__pb2.LoginRequest.SerializeToString,
            response_deserializer=protocol__pb2.LoginResponse.FromString,
            _registered_method=True,
        )
        self.Register = channel.unary_unary(
            "/BVChat/Register",
            request_serializer=protocol__pb2.LoginRequest.SerializeToString,
            response_deserializer=protocol__pb2.RegisterResponse.FromString,
            _registered_method=True,
        )
        self.GetMessages = channel.unary_unary(
            "/BVChat/GetMessages",
            request_serializer=protocol__pb2.GenericRequest.SerializeToString,
            response_deserializer=protocol__pb2.MessageResponse.FromString,
            _registered_method=True,
        )
        self.GetUnreadMessages = channel.unary_unary(
            "/BVChat/GetUnreadMessages",
            request_serializer=protocol__pb2.UnreadMessagesRequest.SerializeToString,
            response_deserializer=protocol__pb2.MessageResponse.FromString,
            _registered_method=True,
        )
        self.SendMessage = channel.unary_unary(
            "/BVChat/SendMessage",
            request_serializer=protocol__pb2.MessageRequest.SerializeToString,
            response_deserializer=protocol__pb2.MessageResponse.FromString,
            _registered_method=True,
        )
        self.DeleteMessages = channel.unary_unary(
            "/BVChat/DeleteMessages",
            request_serializer=protocol__pb2.DeleteMessagesRequest.SerializeToString,
            response_deserializer=protocol__pb2.GenericResponse.FromString,
            _registered_method=True,
        )
        self.DeleteAccount = channel.unary_unary(
            "/BVChat/DeleteAccount",
            request_serializer=protocol__pb2.GenericRequest.SerializeToString,
            response_deserializer=protocol__pb2.GenericResponse.FromString,
            _registered_method=True,
        )
        self.ListenForMessages = channel.unary_stream(
            "/BVChat/ListenForMessages",
            request_serializer=protocol__pb2.GenericRequest.SerializeToString,
            response_deserializer=protocol__pb2.Message.FromString,
            _registered_method=True,
        )


class BVChatServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListAccounts(self, request, context):
        """List accounts (that match search pattern)"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Login(self, request, context):
        """Login"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Register(self, request, context):
        """Register"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetMessages(self, request, context):
        """Get old messages"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUnreadMessages(self, request, context):
        """Get old messages"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SendMessage(self, request, context):
        """Send a message to a user"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteMessages(self, request, context):
        """Delete a set of messages"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteAccount(self, request, context):
        """Delete own account"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListenForMessages(self, request, context):
        """Listen for messages received while being online"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_BVChatServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ListAccounts": grpc.unary_unary_rpc_method_handler(
            servicer.ListAccounts,
            request_deserializer=protocol__pb2.ListAccountsRequest.FromString,
            response_serializer=protocol__pb2.AccountResponse.SerializeToString,
        ),
        "Login": grpc.unary_unary_rpc_method_handler(
            servicer.Login,
            request_deserializer=protocol__pb2.LoginRequest.FromString,
            response_serializer=protocol__pb2.LoginResponse.SerializeToString,
        ),
        "Register": grpc.unary_unary_rpc_method_handler(
            servicer.Register,
            request_deserializer=protocol__pb2.LoginRequest.FromString,
            response_serializer=protocol__pb2.RegisterResponse.SerializeToString,
        ),
        "GetMessages": grpc.unary_unary_rpc_method_handler(
            servicer.GetMessages,
            request_deserializer=protocol__pb2.GenericRequest.FromString,
            response_serializer=protocol__pb2.MessageResponse.SerializeToString,
        ),
        "GetUnreadMessages": grpc.unary_unary_rpc_method_handler(
            servicer.GetUnreadMessages,
            request_deserializer=protocol__pb2.UnreadMessagesRequest.FromString,
            response_serializer=protocol__pb2.MessageResponse.SerializeToString,
        ),
        "SendMessage": grpc.unary_unary_rpc_method_handler(
            servicer.SendMessage,
            request_deserializer=protocol__pb2.MessageRequest.FromString,
            response_serializer=protocol__pb2.MessageResponse.SerializeToString,
        ),
        "DeleteMessages": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteMessages,
            request_deserializer=protocol__pb2.DeleteMessagesRequest.FromString,
            response_serializer=protocol__pb2.GenericResponse.SerializeToString,
        ),
        "DeleteAccount": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteAccount,
            request_deserializer=protocol__pb2.GenericRequest.FromString,
            response_serializer=protocol__pb2.GenericResponse.SerializeToString,
        ),
        "ListenForMessages": grpc.unary_stream_rpc_method_handler(
            servicer.ListenForMessages,
            request_deserializer=protocol__pb2.GenericRequest.FromString,
            response_serializer=protocol__pb2.Message.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "BVChat", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers("BVChat", rpc_method_handlers)


# This class is part of an EXPERIMENTAL API.
class BVChat(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListAccounts(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/BVChat/ListAccounts",
            protocol__pb2.ListAccountsRequest.SerializeToString,
            protocol__pb2.AccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def Login(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/BVChat/Login",
            protocol__pb2.LoginRequest.SerializeToString,
            protocol__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def Register(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/BVChat/Register",
            protocol__pb2.LoginRequest.SerializeToString,
            protocol__pb2.RegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetMessages(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/BVChat/GetMessages",
            protocol__pb2.GenericRequest.SerializeToString,
            protocol__pb2.MessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetUnreadMessages(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/BVChat/GetUnreadMessages",
            protocol__pb2.UnreadMessagesRequest.SerializeToString,
            protocol__pb2.MessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def SendMessage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/BVChat/SendMessage",
            protocol__pb2.MessageRequest.SerializeToString,
            protocol__pb2.MessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteMessages(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/BVChat/DeleteMessages",
            protocol__pb2.DeleteMessagesRequest.SerializeToString,
            protocol__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteAccount(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/BVChat/DeleteAccount",
            protocol__pb2.GenericRequest.SerializeToString,
            protocol__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListenForMessages(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/BVChat/ListenForMessages",
            protocol__pb2.GenericRequest.SerializeToString,
            protocol__pb2.Message.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
